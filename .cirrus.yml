environment:
    CCACHE_BASEDIR: $CIRRUS_WORKING_DIR

clang9_zeek_ubuntu_debug_task:
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - ZEEK_LTS:
      - ZEEK_VERSION: 3.2.2-0
    cpu: 4
    memory: 8G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1
    LD_LIBRARY_PATH: /usr/lib/llvm-9/lib/clang/9.0.1/lib/linux/

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  # We currently run the build with sanitizers against llvm-9 since llvm-10 still triggers some warnings from inside LLVM.
  #
  # TODO(bbannier): Switch this job to llvm-10.
  configure_script:   ./ci/run-ci -b build configure debug --cxx-compiler clang++-9 --with-zeek /opt/zeek --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10` --rpath /usr/lib/llvm-9/lib/clang/9.0.1/lib/linux/ --zeek-ld-preload /usr/lib/llvm-9/lib/clang/9.0.1/lib/linux/libclang_rt.asan-x86_64.so
  build_script:       ./ci/run-ci -b build build
  test_build_script:  ./ci/run-ci -b build test-build
  test_code_script:   ./ci/run-ci -b build test-code
  install_script:     ./ci/run-ci -b build install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

clang10_zeek_lts_ubuntu_release_task:
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - ZEEK_LTS: 1
      - ZEEK_VERSION: 3.0.11-0
    cpu: 4
    memory: 8G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-10 --with-zeek /opt/zeek --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10`
  build_script:          ./ci/run-ci -b build build
  test_build_script:     ./ci/run-ci -b build test-build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

clang9_zeek_lts_ubuntu_release_static_task:
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - ZEEK_LTS: 1
      - ZEEK_VERSION: 3.0.11-0
    cpu: 4
    memory: 8G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-9 --with-zeek /opt/zeek --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10` --build-static-libs
  build_script:          ./ci/run-ci -b build build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

gcc9_ubuntu_release_task:
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - ZEEK_LTS: 1
      - ZEEK_VERSION: 3.0.11-0
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler g++-9 --disable-precompiled-headers
  build_script:          ./ci/run-ci -b build build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

macos_release_task:
  osx_instance:
    image: catalina-base

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  environment:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  install_dependencies_script:
    - brew install llvm bison flex cmake ninja python@3.8 sphinx-doc doxygen ccache zeek
    - pip3 install "btest>=0.66" sphinx_rtd_theme

  configure_script:
    - ./configure --generator=Ninja --with-cxx-compiler=/usr/local/opt/llvm/bin/clang++ --with-bison=/usr/local/opt/bison --with-flex=/usr/local/opt/flex --enable-ccache
  build_script:
    - ninja -C build all check
  test_build_script:
    - (cd tests && btest -j -d)
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

zeek_packages_task:
  container:
    dockerfile: ci/Dockerfile.packages
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  install_runtime_script:  spicy_version=$CIRRUS_BRANCH zkg install --force spicy-runtime || (cat /root/.zkg/logs/* && false)
    # TODO: Remove "spicy_version" from install_tftp_script once zkg no longer rebuilds installed dependencies.
  install_tftp_script:     spicy_version=$CIRRUS_BRANCH zkg install --force spicy-tftp || (cat /root/.zkg/logs/* && false)
  validate_script:         test $(zeek -N | egrep '::(Spicy|TFTP)' | wc -l | awk '{print $1}') = '2'

  zkg_artifacts:
    path: /root/.zkg
    type: application/gzip

docker_alpine_3_12_task:
  container:
    dockerfile: docker/Dockerfile.alpine-3.12
    cpu: 4
    memory: 12G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - LDFLAGS="-lucontext" ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek --with-cxx-compiler=clang++
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_centos_7_task:
  container:
    dockerfile: docker/Dockerfile.centos-7
    cpu: 4
    memory: 12G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - source scl_source enable devtoolset-9 && LDFLAGS="-static-libstdc++ -static-libgcc" ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek --with-cxx-compiler=/opt/rh/devtoolset-9/root/usr/bin/clang++
  build_script:
    - source scl_source enable devtoolset-9 && ninja -j5 -C build install
  test_script:
    - cd tests && source scl_source enable devtoolset-9 && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - source scl_source enable devtoolset-9 && ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_centos_8_task:
  container:
    dockerfile: docker/Dockerfile.centos-8
    cpu: 4
    memory: 12G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek --with-cxx-compiler=clang++
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

validate_homebrew_task:
  only_if: $CIRRUS_BRANCH == 'master'

  osx_instance:
    image: catalina-base

  script:
  - brew tap zeek/zeek
  - brew install spicy --HEAD
  - brew test spicy

docker_debian9_task:
  only_if: $CIRRUS_BRANCH == 'master'
  container:
    dockerfile: docker/Dockerfile.debian-9
    cpu: 4
    memory: 8G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_debian10_task:
  trigger_type: manual
  container:
    dockerfile: docker/Dockerfile.debian-10
    cpu: 4
    memory: 8G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_ubuntu16_task:
  only_if: $CIRRUS_BRANCH == 'master'
  container:
    dockerfile: docker/Dockerfile.ubuntu-16
    cpu: 4
    memory: 8G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_ubuntu18_task:
  only_if: $CIRRUS_BRANCH == 'master'
  container:
    dockerfile: docker/Dockerfile.ubuntu-18
    cpu: 4
    memory: 8G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_ubuntu20_task:
  only_if: $CIRRUS_BRANCH == 'master'
  container:
    dockerfile: docker/Dockerfile.ubuntu-20
    cpu: 4
    memory: 8G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_fedora32_task:
  only_if: $CIRRUS_BRANCH == 'master'
  container:
    dockerfile: docker/Dockerfile.fedora-32
    cpu: 4
    memory: 8G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_fedora33_task:
  only_if: $CIRRUS_BRANCH == 'master'
  container:
    dockerfile: docker/Dockerfile.fedora-33
    cpu: 4
    memory: 8G
    docker_arguments:
      - SKIP_BUILD: 1

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

clang11_zeek_nightly_task:
  # This task is only executed on master.
  # Failing this task does not fail the build.
  only_if: $CIRRUS_BRANCH == 'master'
  allow_failures: true

  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      # We specify these only to pin a certain base image;
      # we install nightly Zeek packages in a CI step below.
      - ZEEK_LTS:
      - ZEEK_VERSION: 3.2.2-0
    cpu: 4
    memory: 8G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1
    LD_LIBRARY_PATH: /usr/lib/llvm-11/lib/clang/9.0.1/lib/linux/

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  install_zeek_nightly_script:
    - echo 'deb http://download.opensuse.org/repositories/security:/zeek/xUbuntu_20.04/ /' | sudo tee /etc/apt/sources.list.d/security:zeek.list
    - curl -fsSL https://download.opensuse.org/repositories/security:zeek/xUbuntu_20.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/security_zeek.gpg > /dev/null
    - sudo apt update
    - sudo DEBIAN_FRONTEND=noninteractive apt install -y zeek-nightly

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-11 --with-zeek /opt/zeek-nightly --clang-format `which clang-format-11` --clang-tidy `which clang-tidy-11`
  build_script:          ./ci/run-ci -b build build
  test_build_script:     ./ci/run-ci -b build test-build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

freebsd11_task:
  freebsd_instance:
    image_family: freebsd-11-4
    cpu: 8
    memory: 8GB

  prepare_script: ./ci/prepare_freebsd.sh

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-flex=/usr/local --with-bison=/usr/local --with-zeek=/usr/local --with-llvm-root=/usr/local/llvm11
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

freebsd12_task:
  freebsd_instance:
    image_family: freebsd-12-2
    cpu: 8
    memory: 8GB

  prepare_script: ./ci/prepare_freebsd.sh

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-flex=/usr/local --with-bison=/usr/local --with-zeek=/usr/local --with-llvm-root=/usr/local/llvm11
  build_script:
    - ninja -j5 -C build install
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip
