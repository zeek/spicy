### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
[spicy] test::A
[spicy]   a = A
[spicy]   b = B
[spicy]   c = C
[spicy]   d = D
[spicy]   e = E
Done: [$a=b"A", $b=b"B", $c=b"C", $d=b"D", $e=b"E"]
[spicy] test::A
[spicy]   failed to parse, will try to synchronize at 'b'
Synced: [$a=(not set), $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
Confirmed: [$a=(not set), $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
[spicy]   b = B
[spicy]   c = C
[spicy]   d = D
[spicy]   e = E
Done: [$a=(not set), $b=b"B", $c=b"C", $d=b"D", $e=b"E"]
[spicy] test::A
[spicy]   a = A
[spicy]   failed to parse, will try to synchronize at 'd'
Synced: [$a=b"A", $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
Confirmed: [$a=b"A", $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
[spicy]   d = D
[spicy]   e = E
Done: [$a=b"A", $b=(not set), $c=(not set), $d=b"D", $e=b"E"]
[spicy] test::A
[spicy]   failed to parse, will try to synchronize at 'b'
Synced: [$a=(not set), $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
Confirmed: [$a=(not set), $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
[spicy]   b = B
[spicy]   c = C
[spicy]   d = D
[spicy]   e = E
Done: [$a=(not set), $b=b"B", $c=b"C", $d=b"D", $e=b"E"]
[spicy] test::A
[spicy]   a = A
[spicy]   failed to parse, will try to synchronize at 'd'
Synced: [$a=b"A", $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
Confirmed: [$a=b"A", $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
[spicy]   d = D
[spicy]   e = E
Done: [$a=b"A", $b=(not set), $c=(not set), $d=b"D", $e=b"E"]
[spicy] test::A
[spicy]   a = A
[spicy]   failed to parse, will try to synchronize at 'd'
Error: [$a=b"A", $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
[error] terminating with uncaught exception of type spicy::rt::ParseError: parse error: expecting 'B' (<...>/synchronized.spicy:33:8)
[spicy] test::A
[spicy]   a = A
[spicy]   failed to parse, will try to synchronize at 'd'
Error: [$a=b"A", $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
[error] terminating with uncaught exception of type spicy::rt::ParseError: parse error: expecting 'B' (<...>/synchronized.spicy:33:8)
[spicy] test::A
[spicy]   failed to parse, will try to synchronize at 'b'
Error: [$a=(not set), $b=(not set), $c=(not set), $d=(not set), $e=(not set)]
[error] terminating with uncaught exception of type spicy::rt::ParseError: parse error: failed to match regular expression (<...>/synchronized.spicy:32:8)
[spicy] test::E
[spicy]   anon = BEGIN
[spicy]   test::E_A
[spicy]     test::E_X
[spicy]       x = 123
[spicy]     x = [$x=b"123"]
[spicy]   a = [$x=[$x=b"123"], $y=(not set)]
[spicy]   anon_2 = END
Done: [$a=[$x=[$x=b"123"], $y=(not set)]]
[spicy] test::E
[spicy]   anon = BEGIN
[spicy]   test::E_A
[spicy]     test::E_Y
[spicy]       y = abc
[spicy]     y = [$y=b"abc"]
[spicy]   a = [$x=(not set), $y=[$y=b"abc"]]
[spicy]   anon_2 = END
Done: [$a=[$x=(not set), $y=[$y=b"abc"]]]
[spicy] test::E
[spicy]   failed to parse, will try to synchronize at 'a'
Synced: [$a=(not set)]
Confirmed: [$a=(not set)]
[spicy]   test::E_A
[spicy]     test::E_Y
[spicy]       y = abc
[spicy]     y = [$y=b"abc"]
[spicy]   a = [$x=(not set), $y=[$y=b"abc"]]
[spicy]   anon_2 = END
Done: [$a=[$x=(not set), $y=[$y=b"abc"]]]
[spicy] test::E
[spicy]   failed to parse, will try to synchronize at 'a'
Synced: [$a=(not set)]
Confirmed: [$a=(not set)]
[spicy]   test::E_A
[spicy]     test::E_X
[spicy]       x = 123
[spicy]     x = [$x=b"123"]
[spicy]   a = [$x=[$x=b"123"], $y=(not set)]
[spicy]   anon_2 = END
Done: [$a=[$x=[$x=b"123"], $y=(not set)]]
[spicy] test::B
[spicy]   x = 49
Done: [$x=49]
[spicy] test::C
[spicy]   x = 49
Error: [$x=49]
[error] terminating with uncaught exception of type spicy::rt::ParseError: parse error: unit rejected outside of trial mode
[spicy] test::D
[spicy]   x = 49
Done: [$x=49]
