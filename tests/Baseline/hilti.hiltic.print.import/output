### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
// Begin of Bar (from "bar.hlt")
// Compiled by HILTI version X.X.X

#include <hilti/rt/compiler-setup.h>

#include <hilti/rt/libhilti.h>

extern uint64_t __hlt_hlto_scope;

namespace __hlt::Bar {
    struct __globals_t;
    struct __globals_t : ::hilti::rt::trait::isStruct, ::hilti::rt::Controllable<__globals_t> {
        std::string bar{};

        std::string __to_string() const {
            return "["s + "$bar=" + hilti::rt::to_string(bar) + "]";
        }
    };

    inline unsigned int __globals_index;
    static inline auto __globals() { return ::hilti::rt::detail::moduleGlobals<__globals_t>(__globals_index); }
    extern void __init_globals(::hilti::rt::Context* ctx);
    extern void __init_module();
    extern void __register_module();
}

HILTI_PRE_INIT(__hlt::Bar::__register_module)

extern void __hlt::Bar::__init_globals(::hilti::rt::Context* ctx) {
    ::hilti::rt::detail::initModuleGlobals<__globals_t>(__globals_index);
    __globals()->bar = "Bar!"s;
}

extern void __hlt::Bar::__init_module() {
      __location__("bar.hlt:10:1-10:38");
    ::hilti::rt::print("Hello, world from Bar!"s, &::hilti::rt::type_info::string, ::hilti::rt::Bool(true));
      __location__("bar.hlt:11:1-11:22");
    ::hilti::rt::print(Foo::__globals()->foo, &::hilti::rt::type_info::string, ::hilti::rt::Bool(true));
      __location__("bar.hlt:12:1-12:17");
    ::hilti::rt::print(Bar::__globals()->bar, &::hilti::rt::type_info::string, ::hilti::rt::Bool(true));
}

extern void __hlt::Bar::__register_module() {
    __hlt_hlto_scope = <...>
    ::hilti::rt::detail::registerModule({ "Bar", __hlt_hlto_scope, &__init_module, &__init_globals, nullptr, &__globals_index});
}

// Begin of Foo (from "foo.hlt")
// Compiled by HILTI version X.X.X

#include <hilti/rt/compiler-setup.h>

#include <hilti/rt/libhilti.h>

extern uint64_t __hlt_hlto_scope;

namespace __hlt::Foo {
    struct __globals_t;
    struct __globals_t : ::hilti::rt::trait::isStruct, ::hilti::rt::Controllable<__globals_t> {
        std::string foo{};

        std::string __to_string() const {
            return "["s + "$foo=" + hilti::rt::to_string(foo) + "]";
        }
    };

    inline unsigned int __globals_index;
    static inline auto __globals() { return ::hilti::rt::detail::moduleGlobals<__globals_t>(__globals_index); }
    extern void __init_globals(::hilti::rt::Context* ctx);
    extern void __init_module();
    extern void __register_module();
}

HILTI_PRE_INIT(__hlt::Foo::__register_module)

extern void __hlt::Foo::__init_globals(::hilti::rt::Context* ctx) {
    ::hilti::rt::detail::initModuleGlobals<__globals_t>(__globals_index);
    __globals()->foo = "Foo!"s;
}

extern void __hlt::Foo::__init_module() {
      __location__("foo.hlt:10:1-10:38");
    ::hilti::rt::print("Hello, world from Foo!"s, &::hilti::rt::type_info::string, ::hilti::rt::Bool(true));
      __location__("foo.hlt:11:1-11:17");
    ::hilti::rt::print(Foo::__globals()->foo, &::hilti::rt::type_info::string, ::hilti::rt::Bool(true));
      __location__("foo.hlt:12:1-12:22");
    ::hilti::rt::print(Bar::__globals()->bar, &::hilti::rt::type_info::string, ::hilti::rt::Bool(true));
}

extern void __hlt::Foo::__register_module() {
    __hlt_hlto_scope = <...>
    ::hilti::rt::detail::registerModule({ "Foo", __hlt_hlto_scope, &__init_module, &__init_globals, nullptr, &__globals_index});
}

// Begin of __linker__
// Compiled by HILTI version X.X.X

#include <hilti/rt/compiler-setup.h>

// 
// Linker code generated for modules:
//   - Bar (<...>/bar.hlt)
//   - Foo (<...>/foo.hlt)

#include <hilti/rt/libhilti.h>

const char HILTI_EXPORT HILTI_WEAK * __hlt_hlto_library_version = <...>
const char HILTI_EXPORT HILTI_WEAK * __hlt_hlto_bind_to_version = <...>
HILTI_EXPORT HILTI_WEAK uint64_t __hlt_hlto_scope = <...>

