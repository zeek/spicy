### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
module Foo {

global real d;
global real r = 0x1.999999999999ap-4;

assert 0x1.999999999999ap-4 == 0x1.999999999999ap-4;

}
// Begin of Foo (from "<...>/nops.hlt")
// Compiled by HILTI version X.X.X

#include <hilti/rt/compiler-setup.h>

#include <hilti/rt/libhilti.h>

extern uint64_t __hlt_hlto_scope;

namespace __hlt::Foo {
    static hilti::rt::Optional<double> d = {};
    static hilti::rt::Optional<double> r = {};
    extern void __init_globals(::hilti::rt::Context* ctx);
    extern void __destroy_globals(::hilti::rt::Context* ctx);
    extern void __init_module();
    extern void __register_module();
}

HILTI_PRE_INIT(__hlt::Foo::__register_module)

extern void __hlt::Foo::__destroy_globals(::hilti::rt::Context* ctx) {
    ::__hlt::Foo::d.reset();;
    ::__hlt::Foo::r.reset();;
}

extern void __hlt::Foo::__init_globals(::hilti::rt::Context* ctx) {
    ::__hlt::Foo::d = hilti::rt::optional::make(double{});
    ::__hlt::Foo::r = hilti::rt::optional::make(0x1.999999999999ap-4);
}

extern void __hlt::Foo::__init_module() {
      __location__("<...>/nops.hlt:11:1-11:35");
    if ( ! (0x1.999999999999ap-4 == 0x1.999999999999ap-4) ) {
        throw ::hilti::rt::AssertionFailure("failed expression '0x1.999999999999ap-4 == 0x1.999999999999ap-4'", "<...>/nops.hlt:11:1-11:35");
    }
}

extern void __hlt::Foo::__register_module() {
    ::hilti::rt::Library::setScope(&__hlt_hlto_scope);
    ::hilti::rt::detail::registerModule({ "Foo", __hlt_hlto_scope, &__init_module, &__init_globals, &__destroy_globals, nullptr});
}

