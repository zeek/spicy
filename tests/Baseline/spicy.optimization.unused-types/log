### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "iterator<stream> __begin &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error);" -> null
[debug/optimizer] [<no location>] declaration::Field "method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error);" -> null
[debug/optimizer] [<no location>] declaration::Field "method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error);" -> null
[debug/optimizer] [<no location>] declaration::Field "method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error);" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse2(inout value_ref<foo::Priv1> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse2(inout value_ref<foo::Priv2> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse2(inout value_ref<foo::Priv3> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse2(inout value_ref<foo::Priv4> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse2(inout value_ref<foo::Priv5> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse2(inout value_ref<foo::Priv6> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static;" -> null
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "optional<iterator<stream>> __position_update &internal &needed-by-feature="uses_random_access";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::Parser __parser &static &internal &needed-by-feature="supports_filters" &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::Parser __parser &static &internal &needed-by-feature="supports_filters" &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::Parser __parser &static &internal &needed-by-feature="supports_filters" &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::Parser __parser &static &internal &needed-by-feature="supports_filters" &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::Parser __parser &static &internal &needed-by-feature="supports_filters" &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::Parser __parser &static &internal &needed-by-feature="supports_filters" &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "spicy_rt::SinkState __sink &internal &needed-by-feature="supports_sinks";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "strong_ref<spicy_rt::Filters> __filters &internal &needed-by-feature="supports_filters";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "uint<64> __offset &internal &needed-by-feature="uses_offset";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] declaration::Field "weak_ref<const stream> __stream &internal &needed-by-feature="uses_stream";" -> null (removing unused member)
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::LogicalOr "False || False" -> expression::Ctor "False"
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%is_filter" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv1%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv10%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%is_filter" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv2%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%is_filter" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv3%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%is_filter" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv4%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%is_filter" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv5%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%is_filter" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Priv6%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub2%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%supports_filters" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%supports_sinks" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_offset" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_random_access" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] expression::Name "__feat%foo@@Pub3%uses_stream" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__begin = begin(__ncur); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*__unit).__offset = cast<uint<64>>(begin(__ncur).offset() - begin(__ncur).offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__begin = __begin; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__offset = cast<uint<64>>(begin(__cur).offset() - __begin.offset()); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__position_update = Null; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { (*self).__stream = __data; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { __trim = False; }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { foo::Priv1::__parser = [$name="foo::Priv1", $is_public=False, $parse1=foo::Priv1::parse1, $parse2=foo::Priv1::parse2, $parse3=foo::Priv1::parse3, $context_new=Null, $type_info=typeinfo(foo::Priv1), $description="", $mime_types=vector(), $ports=vector()]; spicy_rt::registerParser(foo::Priv1::__parser, $scope, Null); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { foo::Priv2::__parser = [$name="foo::Priv2", $is_public=False, $parse1=foo::Priv2::parse1, $parse2=foo::Priv2::parse2, $parse3=foo::Priv2::parse3, $context_new=Null, $type_info=typeinfo(foo::Priv2), $description="", $mime_types=vector(), $ports=vector()]; spicy_rt::registerParser(foo::Priv2::__parser, $scope, Null); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { foo::Priv3::__parser = [$name="foo::Priv3", $is_public=False, $parse1=foo::Priv3::parse1, $parse2=foo::Priv3::parse2, $parse3=foo::Priv3::parse3, $context_new=Null, $type_info=typeinfo(foo::Priv3), $description="", $mime_types=vector(), $ports=vector()]; spicy_rt::registerParser(foo::Priv3::__parser, $scope, Null); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { foo::Priv4::__parser = [$name="foo::Priv4", $is_public=False, $parse1=foo::Priv4::parse1, $parse2=foo::Priv4::parse2, $parse3=foo::Priv4::parse3, $context_new=Null, $type_info=typeinfo(foo::Priv4), $description="", $mime_types=vector(), $ports=vector()]; spicy_rt::registerParser(foo::Priv4::__parser, $scope, Null); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { foo::Priv5::__parser = [$name="foo::Priv5", $is_public=False, $parse1=foo::Priv5::parse1, $parse2=foo::Priv5::parse2, $parse3=foo::Priv5::parse3, $context_new=Null, $type_info=typeinfo(foo::Priv5), $description="", $mime_types=vector(), $ports=vector()]; spicy_rt::registerParser(foo::Priv5::__parser, $scope, Null); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { foo::Priv6::__parser = [$name="foo::Priv6", $is_public=False, $parse1=foo::Priv6::parse1, $parse2=foo::Priv6::parse2, $parse3=foo::Priv6::parse3, $context_new=Null, $type_info=typeinfo(foo::Priv6), $description="", $mime_types=vector(), $ports=vector()]; spicy_rt::registerParser(foo::Priv6::__parser, $scope, Null); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { if ( (*self).__position_update ) { __cur = __cur.advance((*(*self).__position_update)); (*self).__position_update = Null; } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Priv10_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Priv1_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Priv2_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Priv3_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Priv4_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Priv5_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Priv6_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Pub2_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { local uint<64> __offset1 = begin((*__data)).offset(); if ( filtered = spicy_rt::filter_init(self, __data, __cur) ) { local value_ref<stream> __filtered_data = filtered; self.__parse_foo__Pub3_stage2(__filtered_data, begin((*__filtered_data)), (*__filtered_data), __trim, __lah, __lahe, __error); local uint<64> __offset2 = begin((*__data)).offset(); __cur = __cur.advance(__offset2 - __offset1); if ( __trim ) (*__data).trim(begin(__cur)); __result = (__cur, __lah, __lahe, __error); } }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { spicy_rt::filter_disconnect(self); }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [<no location>] statement::If "if ( False ) { }" -> null
[debug/optimizer] [spicy_rt.hlt:28:5-28:76] declaration::Field "method void connect_mime_type(string mime_type, string scope) &internal;" -> null (removing unused member)
[debug/optimizer] [spicy_rt.hlt:29:5-29:75] declaration::Field "method void connect_mime_type(bytes mime_type, string scope) &internal;" -> null (removing unused member)
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv1%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Priv1' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv1%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Priv1' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv1%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Priv1' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv1%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Priv1' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv1%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Priv1' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv1%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Priv1' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv1%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Priv1' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv10%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Priv10' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv10%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Priv10' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv10%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Priv10' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv10%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Priv10' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv10%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Priv10' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv10%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Priv10' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv10%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Priv10' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv2%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Priv2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv2%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Priv2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv2%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Priv2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv2%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Priv2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv2%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Priv2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv2%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Priv2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv2%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Priv2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv3%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Priv3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv3%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Priv3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv3%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Priv3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv3%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Priv3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv3%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Priv3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv3%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Priv3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv3%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Priv3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv4%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Priv4' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv4%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Priv4' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv4%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Priv4' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv4%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Priv4' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv4%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Priv4' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv4%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Priv4' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv4%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Priv4' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv5%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Priv5' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv5%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Priv5' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv5%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Priv5' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv5%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Priv5' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv5%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Priv5' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv5%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Priv5' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv5%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Priv5' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv6%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Priv6' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv6%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Priv6' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv6%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Priv6' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv6%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Priv6' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv6%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Priv6' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv6%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Priv6' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Priv6%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Priv6' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub2%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Pub2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub2%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Pub2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub2%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Pub2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub2%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Pub2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub2%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Pub2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub2%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Pub2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub2%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Pub2' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub3%supports_filters = False;" -> disabled feature 'supports_filters' of type 'foo::Pub3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub3%supports_sinks = False;" -> disabled feature 'supports_sinks' of type 'foo::Pub3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub3%synchronization = False;" -> disabled feature 'synchronization' of type 'foo::Pub3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub3%uses_offset = False;" -> disabled feature 'uses_offset' of type 'foo::Pub3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub3%uses_random_access = False;" -> disabled feature 'uses_random_access' of type 'foo::Pub3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub3%uses_stream = False;" -> disabled feature 'uses_stream' of type 'foo::Pub3' since it is not used
[debug/optimizer] [unused-types.spicy:10:1-53:30] declaration::Constant "const bool __feat%foo@@Pub3%uses_sync_advance = False;" -> disabled feature 'uses_sync_advance' of type 'foo::Pub3' since it is not used
[debug/optimizer] [unused-types.spicy:13:1-13:21] declaration::Type "type Priv1 = struct { optional<hilti::RecoverableFailure> __error &always-emit &internal; method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_foo__Priv1_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error); } &on-heap;" -> null (removing unused type)
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Function "method extern method view<stream> foo::Priv1::parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:13:14-13:20" local value_ref<foo::Priv1> __unit = value_ref(default<const foo::Priv1>()); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:13:14-13:20" # Begin parsing production: Unit: foo__Priv1 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv1 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Function "method extern method view<stream> foo::Priv1::parse2(inout value_ref<foo::Priv1> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:13:14-13:20" local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:13:14-13:20" # Begin parsing production: Unit: foo__Priv1 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv1 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Function "method extern method view<stream> foo::Priv1::parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:13:14-13:20" local value_ref<foo::Priv1> __unit = value_ref(default<const foo::Priv1>()); spicy_rt::initializeParsedUnit((*__gunit), __unit, typeinfo(foo::Priv1)); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:13:14-13:20" # Begin parsing production: Unit: foo__Priv1 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv1 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv1::__parse_foo__Priv1_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:13:14-13:20" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; (*self).__error = __error; default<void>(); __error = (*self).__error; hilti::debugDedent("spicy"); __result = (__cur, __lah, __lahe, __error); return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:13:14-13:20] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv1::__parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:13:14-13:20" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; try { hilti::debugIndent("spicy"); local iterator<stream> __begin = begin(__cur); (*self).__error = __error; default<void>(); __error = (*self).__error; local strong_ref<stream> filtered = Null; if ( ! filtered ) __result = (*self).__parse_foo__Priv1_stage2(__data, __begin, __cur, __trim, __lah, __lahe, __error); } catch ( hilti::SystemException __except ) { default<void>(); (*self).__error = __error; default<void>(); __error = (*self).__error; throw; } (*self).__error = __error; default<void>(); __error = (*self).__error; return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:13:14-13:20] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:13:14-13:20] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:13:14-13:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:13:14-13:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:13:14-13:20] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "method view<stream> parse2(inout value_ref<foo::Pub2> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:16:20-16:26] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:16:20-16:26] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:16:20-16:26] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:16:20-16:26] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:16:20-16:26] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:19:1-19:21] declaration::Type "type Priv2 = struct { optional<hilti::RecoverableFailure> __error &always-emit &internal; method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_foo__Priv2_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error); } &on-heap;" -> null (removing unused type)
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Function "method extern method view<stream> foo::Priv2::parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:19:14-19:20" local value_ref<foo::Priv2> __unit = value_ref(default<const foo::Priv2>()); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:19:14-19:20" # Begin parsing production: Unit: foo__Priv2 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv2 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Function "method extern method view<stream> foo::Priv2::parse2(inout value_ref<foo::Priv2> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:19:14-19:20" local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:19:14-19:20" # Begin parsing production: Unit: foo__Priv2 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv2 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Function "method extern method view<stream> foo::Priv2::parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:19:14-19:20" local value_ref<foo::Priv2> __unit = value_ref(default<const foo::Priv2>()); spicy_rt::initializeParsedUnit((*__gunit), __unit, typeinfo(foo::Priv2)); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:19:14-19:20" # Begin parsing production: Unit: foo__Priv2 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv2 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv2::__parse_foo__Priv2_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:19:14-19:20" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; (*self).__error = __error; default<void>(); __error = (*self).__error; hilti::debugDedent("spicy"); __result = (__cur, __lah, __lahe, __error); return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:19:14-19:20] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv2::__parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:19:14-19:20" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; try { hilti::debugIndent("spicy"); local iterator<stream> __begin = begin(__cur); (*self).__error = __error; default<void>(); __error = (*self).__error; local strong_ref<stream> filtered = Null; if ( ! filtered ) __result = (*self).__parse_foo__Priv2_stage2(__data, __begin, __cur, __trim, __lah, __lahe, __error); } catch ( hilti::SystemException __except ) { default<void>(); (*self).__error = __error; default<void>(); __error = (*self).__error; throw; } (*self).__error = __error; default<void>(); __error = (*self).__error; return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:19:14-19:20] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:19:14-19:20] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:19:14-19:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:19:14-19:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:19:14-19:20] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:20:1-20:21] declaration::Type "type Priv3 = struct { optional<hilti::RecoverableFailure> __error &always-emit &internal; method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_foo__Priv3_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error); } &on-heap;" -> null (removing unused type)
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Function "method extern method view<stream> foo::Priv3::parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:20:14-20:20" local value_ref<foo::Priv3> __unit = value_ref(default<const foo::Priv3>()); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:20:14-20:20" # Begin parsing production: Unit: foo__Priv3 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv3 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Function "method extern method view<stream> foo::Priv3::parse2(inout value_ref<foo::Priv3> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:20:14-20:20" local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:20:14-20:20" # Begin parsing production: Unit: foo__Priv3 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv3 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Function "method extern method view<stream> foo::Priv3::parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:20:14-20:20" local value_ref<foo::Priv3> __unit = value_ref(default<const foo::Priv3>()); spicy_rt::initializeParsedUnit((*__gunit), __unit, typeinfo(foo::Priv3)); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:20:14-20:20" # Begin parsing production: Unit: foo__Priv3 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv3 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv3::__parse_foo__Priv3_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:20:14-20:20" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; (*self).__error = __error; default<void>(); __error = (*self).__error; hilti::debugDedent("spicy"); __result = (__cur, __lah, __lahe, __error); return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:20:14-20:20] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv3::__parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:20:14-20:20" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; try { hilti::debugIndent("spicy"); local iterator<stream> __begin = begin(__cur); (*self).__error = __error; default<void>(); __error = (*self).__error; local strong_ref<stream> filtered = Null; if ( ! filtered ) __result = (*self).__parse_foo__Priv3_stage2(__data, __begin, __cur, __trim, __lah, __lahe, __error); } catch ( hilti::SystemException __except ) { default<void>(); (*self).__error = __error; default<void>(); __error = (*self).__error; throw; } (*self).__error = __error; default<void>(); __error = (*self).__error; return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:20:14-20:20] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:20:14-20:20] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:20:14-20:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:20:14-20:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:20:14-20:20] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:21:1-24:2] declaration::Type "type Priv4 = struct { value_ref<Priv2> _anon &optional &anonymous &no-emit; value_ref<Priv3> x &optional; optional<hilti::RecoverableFailure> __error &always-emit &internal; method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __parse_foo__Priv4_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error); } &on-heap;" -> null (removing unused type)
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Function "method extern method view<stream> foo::Priv4::parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:21:14-24:1" local value_ref<foo::Priv4> __unit = value_ref(default<const foo::Priv4>()); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:21:14-24:1" # Begin parsing production: Unit: foo__Priv4 -> Resolved_6 Resolved_7 (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv4 -> Resolved_6 Resolved_7 if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Function "method extern method view<stream> foo::Priv4::parse2(inout value_ref<foo::Priv4> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:21:14-24:1" local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:21:14-24:1" # Begin parsing production: Unit: foo__Priv4 -> Resolved_6 Resolved_7 (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv4 -> Resolved_6 Resolved_7 if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Function "method extern method view<stream> foo::Priv4::parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:21:14-24:1" local value_ref<foo::Priv4> __unit = value_ref(default<const foo::Priv4>()); spicy_rt::initializeParsedUnit((*__gunit), __unit, typeinfo(foo::Priv4)); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:21:14-24:1" # Begin parsing production: Unit: foo__Priv4 -> Resolved_6 Resolved_7 (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv4 -> Resolved_6 Resolved_7 if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv4::__parse_foo__Priv4_stage2(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:21:14-24:1" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; local value_ref<Priv2> __transient__anon; # "<...>/unused-types.spicy:19:14-19:20" # Begin parsing production: Unit: foo__Priv2_2 -> __transient__anon = default<const foo::Priv2>(); (__cur, __lah, __lahe, __error) = (*__transient__anon).__parse_stage1(__data, __begin, __cur, __trim, __lah, __lahe, __error); # End parsing production: Unit: foo__Priv2_2 -> # "<...>/unused-types.spicy:20:14-20:20" # Begin parsing production: Unit: foo__Priv3_2 -> (*self).x = default<const foo::Priv3>(); (__cur, __lah, __lahe, __error) = (*(*self).x).__parse_stage1(__data, __begin, __cur, __trim, __lah, __lahe, __error); # End parsing production: Unit: foo__Priv3_2 -> (*self).__error = __error; default<void>(); __error = (*self).__error; (*self).__error = __error; default<void>(); __error = (*self).__error; hilti::debugDedent("spicy"); __result = (__cur, __lah, __lahe, __error); return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:21:14-24:1] declaration::Function "method method tuple<const view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> foo::Priv4::__parse_stage1(inout value_ref<stream> __data, iterator<stream> __begin, copy view<stream> __cur, copy bool __trim, copy int<64> __lah, copy iterator<stream> __lahe, copy optional<hilti::RecoverableFailure> __error) { # "<...>/unused-types.spicy:21:14-24:1" local tuple<view<stream>, int<64>, const iterator<stream>, optional<hilti::RecoverableFailure>> __result; try { hilti::debugIndent("spicy"); local iterator<stream> __begin = begin(__cur); (*self).__error = __error; default<void>(); __error = (*self).__error; local strong_ref<stream> filtered = Null; if ( ! filtered ) __result = (*self).__parse_foo__Priv4_stage2(__data, __begin, __cur, __trim, __lah, __lahe, __error); } catch ( hilti::SystemException __except ) { default<void>(); (*self).__error = __error; default<void>(); __error = (*self).__error; throw; } (*self).__error = __error; default<void>(); __error = (*self).__error; return __result; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:21:14-24:1] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:21:14-24:1] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:21:14-24:1] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:21:14-24:1] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:21:14-24:1] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:23:5-23:13] declaration::Field "hook void __on_x(value_ref<const foo::Priv3> __dd);" -> null
[debug/optimizer] [unused-types.spicy:23:5-23:13] operator_::struct_::MemberCall "(*self).__on_x((*self).x)" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Function "method extern method view<stream> foo::Priv5::parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:27:14-27:20" local value_ref<foo::Priv5> __unit = value_ref(default<const foo::Priv5>()); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:27:14-27:20" # Begin parsing production: Unit: foo__Priv5 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv5 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Function "method extern method view<stream> foo::Priv5::parse2(inout value_ref<foo::Priv5> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:27:14-27:20" local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:27:14-27:20" # Begin parsing production: Unit: foo__Priv5 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv5 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:27:14-27:20] declaration::Function "method extern method view<stream> foo::Priv5::parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:27:14-27:20" local value_ref<foo::Priv5> __unit = value_ref(default<const foo::Priv5>()); spicy_rt::initializeParsedUnit((*__gunit), __unit, typeinfo(foo::Priv5)); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:27:14-27:20" # Begin parsing production: Unit: foo__Priv5 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv5 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:27:14-27:20] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:27:14-27:20] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:27:14-27:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:27:14-27:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:27:14-27:20] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Function "method extern method view<stream> foo::Priv6::parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:28:14-28:20" local value_ref<foo::Priv6> __unit = value_ref(default<const foo::Priv6>()); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:28:14-28:20" # Begin parsing production: Unit: foo__Priv6 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv6 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Function "method extern method view<stream> foo::Priv6::parse2(inout value_ref<foo::Priv6> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:28:14-28:20" local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:28:14-28:20" # Begin parsing production: Unit: foo__Priv6 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv6 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:28:14-28:20] declaration::Function "method extern method view<stream> foo::Priv6::parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context) &needed-by-feature="is_filter" &needed-by-feature="supports_sinks" &static { # "<...>/unused-types.spicy:28:14-28:20" local value_ref<foo::Priv6> __unit = value_ref(default<const foo::Priv6>()); spicy_rt::initializeParsedUnit((*__gunit), __unit, typeinfo(foo::Priv6)); local view<stream> __ncur = __cur ? (*__cur) : cast<view<stream>>((*__data)); local int<64> __lahead = 0; local iterator<stream> __lahead_end; local optional<hilti::RecoverableFailure> __error = Null; # "<...>/unused-types.spicy:28:14-28:20" # Begin parsing production: Unit: foo__Priv6 -> (__ncur, __lahead, __lahead_end, __error) = (*__unit).__parse_stage1(__data, begin(__ncur), __ncur, True, __lahead, __lahead_end, __error); # End parsing production: Unit: foo__Priv6 -> if ( __error ) throw ; return __ncur; }" -> null (removing declaration for unused function)
[debug/optimizer] [unused-types.spicy:28:14-28:20] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:28:14-28:20] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:28:14-28:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:28:14-28:20] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:28:14-28:20] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "method view<stream> parse2(inout value_ref<foo::Pub3> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:29:20-32:1] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:29:20-32:1] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:29:20-32:1] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:29:20-32:1] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:29:20-32:1] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:31:5-31:13] declaration::Field "hook void __on_x(value_ref<const foo::Priv6> __dd);" -> null
[debug/optimizer] [unused-types.spicy:31:5-31:13] operator_::struct_::MemberCall "(*self).__on_x((*self).x)" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:35:1-35:30] declaration::Type "type Priv7 = enum { A = 0, B = 1, C = 2 };" -> null (removing unused type)
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook optional<string> __str__();" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_confirmed() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_done();" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_error(string __except);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_finally();" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_gap(uint<64> seq, uint<64> len);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_init();" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_overlap(uint<64> seq, bytes old, bytes new_);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_rejected() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_skipped(uint<64> seq);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_sync_advance(uint<64> offset) &needed-by-feature="uses_sync_advance";" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_synced() &needed-by-feature="synchronization";" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "hook void __on_0x25_undelivered(uint<64> seq, bytes data);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "method view<stream> parse1(inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "method view<stream> parse2(inout value_ref<foo::Priv10> __unit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] declaration::Field "method view<stream> parse3(inout value_ref<spicy_rt::ParsedUnit> __gunit, inout value_ref<stream> __data, optional<view<stream>> __cur = Null, optional<spicy_rt::UnitContext> __context);" -> null
[debug/optimizer] [unused-types.spicy:43:22-46:1] operator_::struct_::MemberCall "(*self).__on_0x25_done()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:43:22-46:1] operator_::struct_::MemberCall "(*self).__on_0x25_error(hilti::exception_what(__except))" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:43:22-46:1] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:43:22-46:1] operator_::struct_::MemberCall "(*self).__on_0x25_finally()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] [unused-types.spicy:43:22-46:1] operator_::struct_::MemberCall "(*self).__on_0x25_init()" -> expression::Ctor "default<void>()" (replacing call to unimplemented method with default value)
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Priv10::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Priv10::__str__
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Priv1::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Priv1::__parse_stage1
[debug/optimizer] removing field for unused method foo::Priv1::__str__
[debug/optimizer] removing field for unused method foo::Priv1::parse1
[debug/optimizer] removing field for unused method foo::Priv1::parse2
[debug/optimizer] removing field for unused method foo::Priv1::parse3
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Priv2::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Priv2::__parse_stage1
[debug/optimizer] removing field for unused method foo::Priv2::__str__
[debug/optimizer] removing field for unused method foo::Priv2::parse1
[debug/optimizer] removing field for unused method foo::Priv2::parse2
[debug/optimizer] removing field for unused method foo::Priv2::parse3
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Priv3::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Priv3::__parse_stage1
[debug/optimizer] removing field for unused method foo::Priv3::__str__
[debug/optimizer] removing field for unused method foo::Priv3::parse1
[debug/optimizer] removing field for unused method foo::Priv3::parse2
[debug/optimizer] removing field for unused method foo::Priv3::parse3
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Priv4::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Priv4::__on_x
[debug/optimizer] removing field for unused method foo::Priv4::__parse_stage1
[debug/optimizer] removing field for unused method foo::Priv4::__str__
[debug/optimizer] removing field for unused method foo::Priv4::parse1
[debug/optimizer] removing field for unused method foo::Priv4::parse2
[debug/optimizer] removing field for unused method foo::Priv4::parse3
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Priv5::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Priv5::__str__
[debug/optimizer] removing field for unused method foo::Priv5::parse1
[debug/optimizer] removing field for unused method foo::Priv5::parse2
[debug/optimizer] removing field for unused method foo::Priv5::parse3
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Priv6::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Priv6::__str__
[debug/optimizer] removing field for unused method foo::Priv6::parse1
[debug/optimizer] removing field for unused method foo::Priv6::parse2
[debug/optimizer] removing field for unused method foo::Priv6::parse3
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Pub2::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Pub2::__str__
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_confirmed
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_done
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_error
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_finally
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_gap
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_init
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_overlap
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_rejected
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_skipped
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_sync_advance
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_synced
[debug/optimizer] removing field for unused method foo::Pub3::__on_0x25_undelivered
[debug/optimizer] removing field for unused method foo::Pub3::__on_x
[debug/optimizer] removing field for unused method foo::Pub3::__str__
[debug/optimizer] removing field for unused method struct_10::parse1
[debug/optimizer] removing field for unused method struct_10::parse2
[debug/optimizer] removing field for unused method struct_10::parse3
[debug/optimizer] removing field for unused method struct_3::parse1
[debug/optimizer] removing field for unused method struct_3::parse2
[debug/optimizer] removing field for unused method struct_3::parse3
[debug/optimizer] removing field for unused method struct_9::parse1
[debug/optimizer] removing field for unused method struct_9::parse2
[debug/optimizer] removing field for unused method struct_9::parse3
